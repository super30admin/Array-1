//Time Complexity : O(n)
//Space Complexity : O(1)
// Did this code successfully run on Leetcode : Yes



class Solution 
{
    public int[] findDiagonalOrder(int[][] mat) 
    {
        int m = mat.length;
        int n = mat[0].length;
        int r=0;
        int c=0;
        int index = 0;
        int dir = 1;
        int[] res = new int[m*n];
        while(index < m*n)
        {
            res[index] = mat[r][c]; 
            //System.out.println(mat[r][c]);
            if(dir == 1)
            {
                //System.out.println("IN");
                //System.out.println(r+" "+c);
                if(c==n-1)
                {
                    dir=-1;
                    r++;
                }
                else if(r==0)
                {
                    dir=-1;
                    c++;
                }
                else
                {
                    r--;
                    c++;
                }
            }
            else
            {
                //System.out.println(r+" "+c);
                if(r==m-1)
                {
                    dir=1;
                    c++;
                }
                else if(c==0)
                {
                    dir=1;
                    r++;
                }
                else
                {
                    r++;
                    c--;
                }
            }
            index++;
        }
        
        return res;
    }
}