'''
Time complexity : O(n)
Space Complexity : O(1)
'''
class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:

        result = list()
        # mutiplication factor
        rp = 1
        n = len(nums)
        result.append(1)
        # The left pass
        for i in range(1, n):
            rp = rp * nums[i - 1]
            result.append(rp)
        rp = 1

        # The right pass
        for i in range(n - 2, -1, -1):
            rp = rp * nums[i + 1]
            result[i] = result[i] * rp
        return result
