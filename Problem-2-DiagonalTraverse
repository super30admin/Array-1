//T.C = O(m*n)
//S.C = O(1)
class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        if(mat.length == 0 || mat[0].length == 0) return new int[0];
        int m = mat.length;
        int n = mat[0].length;
        int[] result = new int[m * n];
        boolean direction = true; // true top , false bottom 
        int row = 0 ;
        int col = 0;
        int i = 0;
        while(i < m * n)
        {
            result[i++] = mat[row][col];
            if(direction)
            {
               if(row == 0 && col != n-1)
               {
                   col++;
                   direction = false;
               }
               else if(col == n-1)
               {
                   row++;
                   direction = false;
               }
               else
               {
                   row--;
                   col++;
               }
            }
            else
            {
               if(col == 0 && row != m-1)
               {
                   row++;
                   direction = true;
               }
               else if(row == m-1)
               {
                   col++;
                   direction = true;
               }
               else
               {
                   row++;
                   col--;
               }
            }
            
        }
        return result;
    }
}
