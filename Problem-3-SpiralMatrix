//TC - O(m*n) - m = rows , n = columns
//SC - O(1)

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int top = 0;
        int bottom = matrix.length - 1;
        int left = 0;
        int right = matrix[0].length -1;
        List<Integer> result = new ArrayList<Integer>();  
        int dir = 0 ;
        while(top <= bottom && left<= right)
        {
            
            for(int i = left ; i <= right ; i++)
            {
                result.add(matrix[top][i]);
            }
            top = top + 1;
            
            for(int i = top ; i <= bottom ; i++)
            {
                result.add(matrix[i][right]);
            }
            right = right - 1;
            if(top <= bottom)
            {
                for(int i = right ; i >= left ; i--)
                {
                    result.add(matrix[bottom][i]);
                }
            }
            bottom = bottom - 1;
            if(left <= right)
            {
                for(int i = bottom ; i >= top ; i--)
                {
                    result.add(matrix[i][left]);
                }
            }
            left = left + 1;
            
        }
        return result;
    }
}
