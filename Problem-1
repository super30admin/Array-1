
Given an array nums of n integers where n > 1, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Example:

Input: [1,2,3,4] Output: [24,12,8,6] Note: Please solve it without division and in O(n).

Follow up: Could you solve it with constant space complexity? (The output array does not count as extra space for the purpose of space complexity analysis.)



// Time Complexity : O(2n) = O(n)
// Space Complexity :O(1) --> even though we use result array here, result array is the output. 
				Input and outputs are not considered for space complexity
// Did this code successfully run on Leetcode :yes 
// Three line explanation of solution in plain english


class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int> result;
        
        int temp = 1;
        result.push_back(1);
        for(int i=1; i < n; i++) {
            temp = temp * nums.at(i-1);
            result.push_back(temp);
        }
        temp = 1;
        for (int j = n - 2; j >= 0; j-- ) {
            temp = temp * nums.at(j+1);
            result.at(j) = result.at(j) * temp;
        }
        return result;
     }
};
