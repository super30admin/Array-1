/*
TC; O(mn) because we are iterating through each and every element;
SC: O(n) because we are using extra array
 */
/*
thought process: we will use direction flag to move up and down diagonally
 */
class DiagonalTraverse{
    public int[] findDiagonalOrder(int[][] matrix) {
        if (matrix == null || matrix.length == 0) return new int[0];
        int m = matrix.length, n = matrix[0].length;
        int result[] = new int[m * n];
        int idx = 0;
        //rows and cols
        int i = 0,j = 0;
        //direction flag
        int dir = 1;

        while(idx < result.length){
            result[idx] = matrix[i][j];
            if (dir == 1){
                //top
                if (j == n-1){
                    i++;
                    dir = -1;
                }
                else if(i == 0){
                   j++;
                   dir = -1;
                }
                else {
                    i--;j++;
                }
            }
            else{
                //bottom
                if (i == m-1){
                    j++;
                    dir = 1;
                }
                else if(j == 0){
                    i++;
                    dir = 1;
                }
                else{
                    i++,j--;
                }
            }
        }

        return result;
    }
}