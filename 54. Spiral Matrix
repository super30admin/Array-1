Time complexity: O(mn)
Space complexity: O(1)
Did this code got submitted successfully on leetcode: Yes

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        
        if(matrix==null || matrix.length==0)
            return new ArrayList<>();
        
        int top=0;
        int bottom=matrix.length-1;
        int left=0;
        int right=matrix[0].length-1;
        
        List<Integer> result= new ArrayList<>();
        
        while(left<=right && top<=bottom){
            
            //top row
            for(int i=left;i<=right;i++){
                result.add(matrix[top][i]);
            }
            top++;
            
            //right column
            for(int i=top;i<=bottom;i++){
                result.add(matrix[i][right]);
            }
            right--;
            
            //bottom row
            if(top<=bottom){
                for(int i=right;i>=left;i--){
                    result.add(matrix[bottom][i]);
                }
            }
            bottom--;
            
            //left column
            if(left<=right){
                for(int i=bottom;i>=top;i--){
                    result.add(matrix[i][left]);
                }
            }
            left++;
        }
        return result;
    }
}
