// Time Complexity :O(M*N)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode :YES
// Any problem you faced while coding this :NO
class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int m=matrix.length;
        int n=matrix[0].length;
        List<Integer> res=new ArrayList<>();
        int left=0,right=n-1;
        int top=0,bottom=m-1;
        while(top<=bottom && left<=right){
            //top row
            for(int j=left;j<=right;j++){
                res.add(matrix[top][j]);
            }
             top++;
            //right column
            if(top<=bottom && left<=right)
            for(int i=top;i<=bottom;i++){
                res.add(matrix[i][right]);
            }
            right--;
            //bottom row;
            if(top<=bottom && left<=right)
            for(int j=right;j>=left;j--){
                    res.add(matrix[bottom][j]);
                }
                bottom--;
            // left;
            if(top<=bottom && left<=right)
            for(int i=bottom;i>=top;i--){
                res.add(matrix[i][left]);
            }
            left++;
                            
        }
        return res;
    }
}