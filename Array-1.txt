All test cases Passed
Product of Array Except Self
class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        rp=1
        l=[1]
        for i in range(1,len(nums)):
            rp=rp*nums[i-1]
            l.append(rp)
        rp=1
        for i in range(len(nums)-2,-1,-1):
            rp=rp*nums[i+1]
            l[i]=rp*l[i]
        return l
Diagonal Traverse
class Solution:
    def findDiagonalOrder(self, mat: List[List[int]]) -> List[int]:
        row=len(mat)
        col=len(mat[0])
        r=0
        c=0
        index=0
        l=[]
        direct=1
        while index<(row*col):
            l.append(mat[r][c])
            index=index+1
            if direct==1:
                if c==col-1:
                    direct=-1
                    r=r+1
                elif r==0:
                    direct=-1
                    c=c+1
                else:
                    r=r-1
                    c=c+1
            else:
                if r==row-1:
                    direct=1
                    c=c+1
                elif c==0:
                    direct=1
                    r=r+1
                else:
                    c=c-1
                    r=r+1
        return l
                
Spiral Matrix
class Solution:
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        row=len(matrix)
        col=len(matrix[0])
        top=0
        left=0
        l=[]
        right=col-1
        bottom=row-1
        while(top<=bottom and left<=right):
            if top<=bottom and left<=right:
                for i in range(left,right+1):
                    l.append(matrix[top][i])
                top=top+1
            if top<=bottom and left<=right:
                for i in range(top,bottom+1):
                    l.append(matrix[i][right])
                right=right-1
            if top<=bottom and left<=right:
                for i in range(right,left-1,-1):
                    l.append(matrix[bottom][i])
                bottom=bottom-1
            if top<=bottom and left<=right:
                for i in range(bottom,top-1,-1):
                    l.append(matrix[i][left])
                left=left+1
        return l
            
            
            