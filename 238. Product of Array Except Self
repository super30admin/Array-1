Time complexity: O(n)
Space complexity: O(n)
Did this code successfully submitted on leetcode: Yes

class Solution {
    public int[] productExceptSelf(int[] nums) {
        
        //1. Create two arrays to keep track of
            // Product of numbers on left
            // Product of numbers on right
        //2. Multiply both the array element of respective index
        
        //Edge case
        if(nums==null || nums.length==0)
            return new int[0];
        
        //1.
        int[] L = new int[nums.length];
        int[] R = new int[nums.length];
        
        L[0] = R[nums.length-1] = 1;
        
        for(int i=0;i<L.length-1;i++){
            L[i+1]=L[i]*nums[i];
        }
        
        for(int i=R.length-1;i>0;i--){
            R[i-1]=R[i]*nums[i];
        }
        
        //2.
        for(int i=0;i<nums.length;i++){
            nums[i]=L[i]*R[i];
        }
        
        return nums;
    }
}
