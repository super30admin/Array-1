# Time Complexity : O(size_of_matrix)
# Space Complexity : O(1)
# Did this code successfully run on LeetCode : Yes
# Any problem you faced while coding this : No

class Solution:
    def findDiagonalOrder(self, matrix: List[List[int]]) -> List[int]:
        
        result = []
        dir_ = 1
        i = j = 0
        
        while i < len(matrix) and j < len(matrix[0]):
            result.append(matrix[i][j])
            if dir_ == 1:
                if j == len(matrix[0])-1:
                    i += 1
                    dir_ = -1
                elif i == 0:
                    j += 1
                    dir_ = -1
                else:
                    i -= 1
                    j += 1
            else:
                if i == len(matrix)-1:
                    j += 1
                    dir_ = 1
                elif j == 0:
                    i += 1
                    dir_ = 1
                else:
                    i += 1
                    j -= 1
                    
        return result
            