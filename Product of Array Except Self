// Time Complexity : O(n) where n - size of nums
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : no

Solution - 

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int[] result = new int[nums.length];
        result[0] = 1;
        int rp = 1;
        
        //left product
        for(int i = 1; i < nums.length; i++)
        {
            rp = rp * nums[i - 1];
            result[i] = rp;
        }
        
        rp = 1;
        
        //right product
        for(int i = nums.length - 2; i >= 0; i--)
        {
            rp = rp * nums[i + 1];
            result[i] *= rp;
        }
        
        return result;
    }
}
