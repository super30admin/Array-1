//Time Complexity: O(n)
//Space Complexity: O(n)

//Solution accepted in Leetcode: Yes

class Solution {
    public int[] findDiagonalOrder(int[][] matrix) {
        if (matrix.length == 0 || matrix[0].length == 0) return new int[]{};
        int row = 0, col = 0, index = 0;
        boolean goingUp = true;
        
        int[] answer = new int[matrix.length * matrix[0].length];
        
        while (index < answer.length) {
            answer[index++] = matrix[row][col];
            if (goingUp) {
                if (row == 0 || col == matrix[0].length - 1) {
                    goingUp = false;
                    if (col != matrix[0].length - 1) {
                        row = 0;
                        col = col + 1;
                    } else {
                        col = matrix[0].length - 1;
                        row = row + 1;
                    }
                } else {
                    row = row - 1;
                    col = col + 1;
                }
            } else {
                if (col == 0 || row == matrix.length - 1) {
                    goingUp = true;
                    if (row != matrix.length - 1) {
                        row = row + 1;
                        col = 0;
                    } else {
                        row = matrix.length - 1;
                        col = col + 1;
                    }
                } else {
                    col = col - 1;
                    row = row + 1;
                }
            }
        }
        
        return answer;
    }
}
