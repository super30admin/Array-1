//Time Complexity : O(n)
//Space Complexity : O(n)
// Did this code successfully run on Leetcode : Yes


class Solution 
{
    public int[] productExceptSelf(int[] nums) 
    {
        
        int[] suffix = new int[nums.length];
        int prod = 1;
        // prefix[0] = 1;
        // for(int i=1;i<nums.length;i++)
        // {
        //     prefix[i] = prefix[i-1] * nums[i-1];
        // }
        
        suffix[nums.length-1] = 1;
        int prods=1;
        for(int i=nums.length-2;i>=0;i--)
        {
            suffix[i] = suffix[i+1] * nums[i+1];
        }
        int[] res = new int[nums.length];
        for(int i=0;i<nums.length;i++)
        {
            if(i!=0)
            prod = prod * nums[i-1];
            res[i] = prod * suffix[i];
        }
        
        return res;
    }
}