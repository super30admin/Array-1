'''
Time complexity : O(n)
Space Complexity: O(n)
'''
class Solution:
    def findDiagonalOrder(self, matrix: List[List[int]]) -> List[int]:
        m = len(matrix)
        n = len(matrix[0])
        result = list()
        up = True
        i, j, idx = 0, 0, 0

        while (idx < (m * n)):

            result.append(matrix[i][j])
            idx += 1
            if (up == True):
                if (j == n - 1):
                    i += 1
                    up = False
                elif (i == 0):
                    j += 1
                    up = False
                else:
                    i -= 1
                    j += 1
            else:
                if (i == m - 1):
                    j += 1
                    up = True
                elif (j == 0):
                    i += 1
                    up = True
                else:
                    j -= 1
                    i += 1
        return result
