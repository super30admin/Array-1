class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        
        //54. Spiral Matrix
        //Time Complexity: O(rows*columns)
        //Space COmplexity: O(1)
        ArrayList<Integer> result = new ArrayList<>();
        
        if(matrix ==null || matrix.length==0)
            return result;
        
        int left=0;
        int right=matrix[0].length-1;
        int top=0;
        int bottom=matrix.length-1;
        
        while(top<=bottom && left<=right){
            
            //top row
            for(int i=left;i<=right;i++){
                result.add(matrix[top][i]);
            }
            top++;
            
            //right column
            for(int i=top; i<=bottom;i++){
                result.add(matrix[i][right]);
            }
            right--;
            
            //bottom row
            if(top<=bottom){
              for(int i =right; i>=left;i--){
                result.add(matrix[bottom][i]);
            }
            bottom--;  
            }
            
            
            //left column
            if( left<=right){
                 for(int i = bottom;i>=top;i--){
                result.add(matrix[i][left]);
            }
            left++;
            }
            
           
        }
        return result;
    }
}